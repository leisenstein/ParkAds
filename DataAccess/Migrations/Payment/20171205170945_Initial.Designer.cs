// <auto-generated />
using DataAccess.DB.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DataAccess.Migrations.Payment
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20171205170945_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Booking", b =>
                {
                    b.Property<int>("Id").ValueGeneratedNever();

                    b.Property<DateTime>("DateTime");

                    b.Property<bool>("IsPayed");

                    b.Property<string>("Spotname");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Spotname");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BookingId");

                    b.Property<DateTime>("DateTime");

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Domain.Spot", b =>
                {
                    b.Property<string>("name").ValueGeneratedNever();

                    b.Property<int>("free_count");

                    b.Property<string>("is_open");

                    b.Property<string>("is_payment_active");

                    b.Property<double>("latitude");

                    b.Property<double>("longitude");

                    b.Property<int>("max_count");

                    b.Property<string>("status_park_place");

                    b.HasKey("name");

                    b.ToTable("Spot");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("Id").ValueGeneratedNever();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.Booking", b =>
                {
                    b.HasOne("Domain.Spot", "Spot")
                        .WithMany()
                        .HasForeignKey("Spotname");

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Domain.Payment", b =>
                {
                    b.HasOne("Domain.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId");
                });
#pragma warning restore 612, 618
        }
    }
}
